title: Configuring Jabberd2 on Arch
date: 18/05/2010

A follow-up to my previous post..

## A warning

I'm just going to enumerate the changes I did to configure my Jabber server.
This configuration is for a personal server, with a limited amount of users.
Perhaps using PAM can scale to epically large servers, but for my uses, I only
need 1 account working. Namely, mine. Therefore, if you trying to use this
configuration scheme for an enterprise set up, __you are doing it wrong__. Use
LDAP, or MySQL. I don't care.

Now that I got that out of the way, let's see what I did, hm? All of what I did
can be found on the main documentation page; if my explanations are not suitable
for you, try reading the page here for a possibly alternative explanation.

http://www.jabberdoc.org/AdminGuide

### c2s.xml
    * Set the ID (the name) of the server. Line 125.
    * Use PAM as the authentication module: `<module>pam</module>` Line 334.
    * Point to my SSL key for encrypted router communication, uncomment line 29.
    * As a parameter to `<id>`, pointed it to my SSL key.
    * As a parameter to `<id>`, required STARTTLS.
    * Enable HTTP forward to http://evaryont.me. Uncomment line 176.

### router.xml
    * Switch to implicit deny: `<order>deny,allow</order>` Line 128
    * Only allow localhost (127.0.0.1), uncomment line 128 and substitute
      localhost's IP in.
    * Point to my SSL key, uncomment line 54.

### sm.xml
    * Set the ID of the server, again. **Make sure it's the same as in c2s.xml!**
    * Uncomment line 579, so that new users (PAM users) are automatically
      created in Jabber-land.
    * Set my own account as admin. Line 299.
    * Point to my SSL key, uncomment line 29.

### s2s.xml
    * Point to my SSL key for encrypted router communication, uncomment line 40.
    * Point to my SSL key for encrypted server to server communication,
      uncomment line 107.

### DNS
    * Added SRV records that loop back and point to this server. Perhaps it's
      silly, but it may be necessary. It probably is not.

### SSL

Setting up SSL on Jabberd2 is a little tricky. The `.pem` file you point it to
needs to be in a specific format. I'll outline how to get it to work with
StartSSL, though this process should be pretty much the same. I presume you
have not created a CSR or private key yet.

1. You open up https://www.startssl.com and launch the certificate wizard
2. Create a private key
3. When StartSSL shows you your private key, in a text box, copy it into a
   file.
4. Run `openssl rsa -in ssl.key -out ssl.key` to decrypt your private key. Make
   sure to replace 'ssl.key' with the name of the file you downloaded!
5. Continue on, and choose the domain & subdomain you want to sign.
6. StartSSL will give you the signed certificate. Save it to a file, like
   `server.crt` or whatever.
7. Download the CA & Class 1 intermediate server certificates as well.
8. Now we combine all these files, but **in a specific order!**
9. Run these commands, assuming all the files are in the same directory. Make
   sure to change the file names referenced here if you didn't use the same
   names I did!

       cat server.crt > server.pem
       cat ssl.key >> server.pem
       cat sub.class1.server.ca.pem >> server.pem
       cat ca.pem >> server.pem

   And now your file is ready. Move it somewhere secure, set the ownership
   correctly, and edit the files as above to point to your key.

## Fin

And that is it. I will update this page as I configure the server some more. As a note,
all the .dist files you see in `/etc/jabberd/` are the original, shipped versions. Don't
edit them, just leave them alone. Useful to keep the originals as back ups in case you need
to fall back on something. (Even if they are not what you want.)
